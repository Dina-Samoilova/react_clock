{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","setInterval","this","setState","prevProps","props","name","console","log","clearInterval","toLocaleTimeString","React","Component","App","isClockVisible","clockName","className","type","onClick","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"sNAMaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,KACVC,QAASC,aAAY,gBAHzB,uDAME,WAAqB,IAAD,OAClBC,KAAKC,SAAS,CACZH,QAASC,aAAY,WACnB,EAAKE,SAAS,CAAEL,KAAM,IAAIC,SACzB,SAVT,gCAcE,SAAmBK,GACbF,KAAKG,MAAMC,OAASF,EAAUE,MAEhCC,QAAQC,IAAR,qCAA0CJ,EAAUE,KAApD,eAA+DJ,KAAKG,MAAMC,SAjBhF,kCAqBE,WACEG,cAAcP,KAAKL,MAAMG,WAtB7B,oBAyBE,WACE,IAAQF,EAASI,KAAKL,MAAdC,KAKR,OAFAS,QAAQC,IAAIV,EAAKY,sBAGf,mCACGZ,EAAKY,2BAjCd,GAA2BC,IAAMC,WCF3BC,E,4MACJhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAW,G,4CAGb,WAAU,IAAD,OACCD,EAAmBZ,KAAKL,MAAxBiB,eAER,OACE,mCAEE,sBAAKE,UAAU,MAAf,UACE,6CACA,8CAEG,IACAF,EAAiB,cAAC,EAAD,CAAOR,KAAMJ,KAAKL,MAAMkB,YAAgB,QAG5D,wBACEE,KAAK,SACLC,QAAS,WACP,EAAKf,SAAS,CAAEW,gBAAgB,KAHpC,wBASA,wBACEG,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,EAAKf,SAAS,CAAEW,gBAAgB,KAJpC,wBAUA,wBACEG,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,EAAKf,SAAS,CAAEY,UAAYI,KAAKC,MAAsB,IAAhBD,KAAKE,aAJhD,sC,GAvCQV,IAAMC,WAsDTC,ICvDfS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d6dd3910.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: number,\n};\n\nexport class Clock extends React.Component<Props> {\n  state = {\n    date: new Date(),\n    timerId: setInterval(() => {}),\n  };\n\n  componentDidMount() {\n    this.setState({\n      timerId: setInterval(() => {\n        this.setState({ date: new Date() });\n      }, 1000),\n    });\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    if (this.props.name !== prevProps.name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    // eslint-disable-next-line no-console\n    console.log(date.toLocaleTimeString());\n\n    return (\n      <>\n        {date.toLocaleTimeString()}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  render() {\n    const { isClockVisible } = this.state;\n\n    return (\n      <>\n\n        <div className=\"App\">\n          <h1>React clock</h1>\n          <p>\n            Current time:\n            {' '}\n            {isClockVisible ? <Clock name={this.state.clockName} /> : null}\n          </p>\n\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.setState({ isClockVisible: true });\n            }}\n          >\n            Show Clock\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => {\n              this.setState({ isClockVisible: false });\n            }}\n          >\n            Hide Clock\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => {\n              this.setState({ clockName: (Math.floor(Math.random() * 100)) });\n            }}\n          >\n            Set random name\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}